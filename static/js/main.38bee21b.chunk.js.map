{"version":3,"sources":["actions/Counter.js","reducers/Counter.js","reducers/index.js","store/configureStore.js","components/Header/index.js","components/Header/Header.js","components/Footer/index.js","components/Footer/Footer.js","components/Layout/index.js","components/Layout/Layout.js","pages/Home/HomePage.js","pages/Home/index.js","pages/Counter/index.js","pages/Counter/CounterPage.js","routes/routes.js","components/RouteProgress/RouteProgress.js","App.js","serviceWorker.js","index.js"],"names":["Actions","incrementCounter","type","decrementCounter","resetCounter","initialState","counter","state","action","rootReducer","history","combineReducers","router","connectRouter","createHashHistory","basename","Header","props","className","Footer","prosp","target","href","Layout","children","homeText","HomePage","typing","useRef","counterLink","useState","shouldShowLink","setShouldShowLink","iterator","useEffect","typeText","length","current","innerHTML","setTimeout","ref","to","CounterPage","connect","dispatch","bindActionCreators","onClick","e","style","display","width","justifyContent","baseUrl","process","routes","title","path","exact","component","RouteProgress","nprogress","start","done","App","map","route","index","key","Boolean","window","location","hostname","match","store","middlewares","thunk","routerMiddleware","createStore","compose","applyMiddleware","configureStore","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.38bee21b.chunk.js","sourcesContent":["export const Actions = {\n  INCREMENT_COUNTER: \"INCREMENT_COUNTER\",\n  DECREMENT_COUNTER: \"DECREMENT_COUNTER\",\n  RESET_COUNTER: \"RESET_COUNTER\",\n};\n\nexport const incrementCounter = () => ({\n  type: Actions.INCREMENT_COUNTER,\n});\n\nexport const decrementCounter = () => ({\n  type: Actions.DECREMENT_COUNTER,\n});\n\nexport const resetCounter = () => ({\n  type: Actions.RESET_COUNTER,\n});\n","import { Actions } from \"../actions/Counter\";\n\nconst initialState = {\n  counter: 0,\n};\n\nexport default function counter(state = initialState, action) {\n  switch (action.type) {\n    case Actions.INCREMENT_COUNTER:\n      return {\n        counter: state.counter + 1,\n      };\n    case Actions.DECREMENT_COUNTER:\n      return {\n        counter: state.counter - 1,\n      };\n    case Actions.RESET_COUNTER:\n      return {\n        counter: 0,\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport { connectRouter } from \"connected-react-router\";\nimport counter from \"./Counter\";\n\nconst rootReducer = (history) =>\n  combineReducers({\n    router: connectRouter(history),\n    counter\n  });\n\nexport default rootReducer;\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { logger } from \"redux-logger\";\nimport { createHashHistory } from \"history\";\nimport { routerMiddleware } from \"connected-react-router\";\nimport rootReducer from \"../reducers\";\n\nexport const history = createHashHistory({ basename: \"react-redux-boilerplate\" });\n\nexport default function configureStore(initialState = {}) {\n  const middlewares = [thunk, routerMiddleware(history)];\n  if (process.env.NODE_ENV !== \"production\") {\n    middlewares.push(logger);\n    return createStore(\n      rootReducer(history),\n      initialState,\n      compose(composeWithDevTools(applyMiddleware(...middlewares)))\n    );\n  } else {\n    return createStore(rootReducer, initialState, compose(applyMiddleware(...middlewares)));\n  }\n}\n","import Header from \"./Header\";\nexport default Header;\n","import React from \"react\";\nimport \"./header.css\";\n\nconst Header = (props) => <div className=\"header-container\">React-Redux-Boilerplate</div>;\n\nexport default Header;\n","import Footer from \"./Footer\";\nexport default Footer;\n","import React from \"react\";\nimport \"./footer.css\";\n\nconst Footer = (prosp) => (\n  <div className=\"footer-container\">\n    <div className=\"footer-content\">\n      <a\n        target=\"_blank\"\n        href=\"https://github.com/asjadanis/react-redux-boilerplate\"\n        className=\"link-styles\"\n      >\n        Github\n      </a>\n    </div>\n  </div>\n);\n\nexport default Footer;\n","import Layout from \"./Layout\";\nexport default Layout;\n","import React from \"react\";\nimport Header from \"../Header\";\nimport Footer from \"../Footer\";\nimport \"./layout.css\";\n\nconst Layout = ({ children }) => (\n  <div className=\"layout-container\">\n    <Header />\n    <div className=\"layout-content\">{children}</div>\n    <Footer />\n  </div>\n);\n\nexport default Layout;\n","import React, { useRef, useEffect, useState } from \"react\";\nimport \"./home.css\";\nimport { Link } from \"react-router-dom\";\n\nconst homeText = `Hi my name is Asjad and I created this simplistic react-redux-boilerplate based on create-react-app, \n                  to quickly get started with React, without going through a bunch of configurations. This boilerplate \n                  comes pre-configured with redux, redux-thunk, redux-logger, react-router and connected-react-router \n                  to synchronise router state with redux.\n                  \n                  How to get started: \n                  \n                  1 - Clone this repo from https://github.com/asjadanis/react-redux-boilerplate\n                  2 - Install node modules running yarn install or npm install.\n                  3 - Make sure to install redux dev tools extension first from https://chrome.google.com/webstore/detail/redux-devtools/lmhkpmbekcpmknklioeibfkpmmfibljd?hl=en\n                  4 - Run yarn start or npm run start to see it in action.\n                  5 - For more details see the project source on github and feel free to experiment and fork the repo.\n                  `;\n\nconst exampleLink = `Navigate here to see it in action <br/><br/> `;\nconst timeout = 50;\n\nconst HomePage = (props) => {\n  const typing = useRef();\n  const counterLink = useRef();\n  const [shouldShowLink, setShouldShowLink] = useState(false);\n  let [iterator, setIterator] = useState(0);\n\n  const typeText = () => {\n    if (iterator < homeText.length) {\n      typing.current.innerHTML += homeText[iterator];\n      iterator++;\n      setTimeout(typeText, timeout);\n    }\n    if (iterator >= homeText.length) {\n      counterLink.current.innerHTML = exampleLink;\n      setShouldShowLink(true);\n    }\n  };\n\n  useEffect(() => {\n    typeText();\n  }, []);\n\n  return (\n    <div>\n      <pre className=\"description\" ref={typing}></pre>\n      <div className=\"example\">\n        <p ref={counterLink}></p>\n        {shouldShowLink && <Link to=\"/counter\">Counter Example</Link>}\n      </div>\n    </div>\n  );\n};\n\nexport default HomePage;\n","import HomePage from \"./HomePage\";\nexport default HomePage;\n","import CounterPage from \"./CounterPage\";\nexport default CounterPage;\n","import React from \"react\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport \"./counter.css\";\nimport { incrementCounter, decrementCounter, resetCounter } from \"../../actions/Counter\";\nimport { Link } from \"react-router-dom\";\n\nconst CounterPage = (props) => {\n  const { incrementCounter, decrementCounter, resetCounter, counter, history } = props;\n  return (\n    <div className=\"counter-container\">\n      <div> A Simple Counter Example </div>\n      <div className=\"counter-content\">\n        <div onClick={(e) => decrementCounter()} className=\"decrement\">\n          -\n        </div>\n        <div className=\"counter\">{counter}</div>\n        <div onClick={(e) => incrementCounter()} className=\"increment\">\n          +\n        </div>\n      </div>\n      <div style={{ display: \"flex\", width: \"100%\", justifyContent: \"center \" }}>\n        <div onClick={(e) => resetCounter()} className=\"reset\">\n          Reset\n        </div>\n        <Link to=\"/\" className=\"reset\">\n          Home\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    counter: state.counter.counter\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({ incrementCounter, decrementCounter, resetCounter }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CounterPage);\n","import HomePage from \"../pages/Home\";\nimport CounterPage from \"../pages/Counter\";\n\nconst baseUrl = process.env.NODE_ENV === \"production\" ? process.env.PUBLIC_URL : \"\";\n\nconst routes = [\n  { title: \"Home\", path: `${baseUrl}/`, exact: true, component: HomePage },\n  { title: \"Counter\", path: `${baseUrl}/counter`, exact: true, component: CounterPage }\n];\n\nexport default routes;\n","import React, { useEffect } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport nprogress from \"nprogress\";\nimport \"nprogress/nprogress.css\";\nimport \"./route-progress.css\";\n\nexport const RouteProgress = (props) => {\n  nprogress.start();\n\n  useEffect(() => {\n    nprogress.done();\n  }, []);\n\n  return <Route {...props} />;\n};\n","import React from \"react\";\nimport { Switch } from \"react-router-dom\";\nimport Layout from \"./components/Layout\";\nimport routes from \"./routes/routes.js\";\nimport \"./App.css\";\nimport { RouteProgress } from \"./components/RouteProgress/RouteProgress\";\n\nfunction App() {\n  return (\n    <div>\n      <Layout>\n        <div className=\"main-content\">\n          <Switch>\n            {routes.map((route, index) => (\n              <RouteProgress key={index} {...route} />\n            ))}\n          </Switch>\n        </div>\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { ConnectedRouter } from \"connected-react-router\";\nimport configureStore, { history } from \"./store/configureStore\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </ConnectedRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}